openapi: 3.0.3
info:
  title: ORGiD migration backend server
  description: >-
    This is the interface documentation for the RESTful API interface for
    backend services of ORGiD migration backend server
  version: 0.0.1
servers:
  - url: http://localhost:3333/api
    description: Local Testing server
paths:
  /ping:
    get:
      description: Ping-pong
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pong'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /clean:
    post:
      description: System reset (on test only)
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /owner/{address}:
    get:
      description: Returns list of owned ORGiDs DIDs
      parameters:
        - in: path
          name: address
          required: true
          schema:
            $ref: '#/components/schemas/EthAddress'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dids'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /did:
    get:
      description: Returns request Id of the did
      parameters:
        - in: query
          name: did
          required: true
          schema:
            $ref: '#/components/schemas/Did'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /request:
    post:
      description: Creation of migration requests job
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /request/{id}:
    get:
      description: Returns request status by Id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/RequestId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      description: Objet describing an error
      type: object
      properties:
        message:
          description: Error message
          type: string
          example: Something went wrong
      required:
        - message
    Pong:
      description: Ping-pong response
      type: object
      properties:
        time:
          type: string
          format: date-time
          example: '2022-11-16T22:33:49.333+01:00'
    EthAddress:
      description: EOA
      type: string
      pattern: ^0x[a-fA-F0-9]{40}$
      example: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'
    Did:
      description: ORGiD DID
      type: string
      pattern: ^did:orgid:([0-9])*(?::)?(0x[a-fA-F0-9]{64})+$
      example: did:orgid:77:0xeae18b4ccf6dfd743dc1738c6547bc829c3384bcc2b48f98f0c9a49c5c67b2be
    Dids:
      description: List of ORGiDs DIDs
      type: array
      items:
        $ref: '#/components/schemas/Did'
    ApiOwnerParams:
      description: In-path API /owner/{address} parameters
      type: object
      properties:
        address:
          $ref: '#/components/schemas/EthAddress'
      required:
        - address
    ApiDidParams:
      description: In-path API /did/{did} parameters
      type: object
      properties:
        did:
          $ref: '#/components/schemas/Did'
      required:
        - did
    ApiRequestParams:
      description: In-path API /request/{id} parameters
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RequestId'
      required:
        - id
    RequestId:
      description: Migration request Id
      type: string
    MigrationRequest:
      description: An ORGiD migration request
      type: object
      properties:
        did:
          $ref: '#/components/schemas/Did'
        chain:
          description: Chain Id
          type: number
          enum: [5, 77, 100, 137]
        orgIdVc:
          description: Serialized ORGiD VC
          type: string
      required:
        - did
        - chain
        - orgIdVc
    RequestState:
      description: An ORGiD migration request progress state
      type: string
      enum:
        - requested
        - progress
        - failed
        - completed
    RequestStatus:
      description: An ORGiD migration request status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RequestId'
        timestamp:
          description: Timestamp when the request was created
          type: number
        did:
          $ref: '#/components/schemas/Did'
        state:
          $ref: '#/components/schemas/RequestState'
      required:
        - id
        - timestamp
        - did
        - state
